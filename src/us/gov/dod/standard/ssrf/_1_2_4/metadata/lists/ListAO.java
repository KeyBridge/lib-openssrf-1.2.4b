/* 
 * Copyright 2014 Key Bridge Global LLC.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package us.gov.dod.standard.ssrf._1_2_4.metadata.lists;

import javax.xml.bind.annotation.XmlEnum;
import javax.xml.bind.annotation.XmlEnumValue;
import javax.xml.bind.annotation.XmlType;
import us.gov.dod.standard.ssrf._1_2_4.*;
import us.gov.dod.standard.ssrf._1_2_4.administrative.Codes;
import us.gov.dod.standard.ssrf._1_2_4.refdata.*;
import us.gov.dod.standard.ssrf._1_2_4.shared.Address;
import us.gov.dod.standard.ssrf._1_2_4.shared.Manufacturer;

/**
 * Enumerated values for fields using the ListAO type.
 * <p>
 * Used in
 * {@link Address}, {@link AntStd}, {@link BandApplication}, {@link BandUser}, {@link ChnlPlan}, {@link Codes}, {@link CoordStd}, {@link CurveStd}, {@link EmsMaskStd}, {@link EmsStd}, {@link ForceElement}, {@link Manufacturer}, {@link Note}, {@link Organisation}, {@link RxStd}, {@link SSRequest}, {@link Std}
 * <p>
 * @author Jesse Caulfield
 * @version SSRF 1.2.4b, 11/12/2014
 */
@XmlType(name = "ListAO")
@XmlEnum
public enum ListAO {

  ABW("ABW"),
  AFG("AFG"),
  AFS("AFS"),
  AGL("AGL"),
  AIA("AIA"),
  ALB("ALB"),
  ALG("ALG"),
  ALS("ALS"),
  AMS("AMS"),
  AND("AND"),
  AOE("AOE"),
  ARG("ARG"),
  ARM("ARM"),
  ARS("ARS"),
  ASC("ASC"),
  ATA("ATA"),
  ATG("ATG"),
  ATN("ATN"),
  AUS("AUS"),
  AUT("AUT"),
  AZE("AZE"),
  AZR("AZR"),
  B("B"),
  BAH("BAH"),
  BDI("BDI"),
  BEL("BEL"),
  BEN("BEN"),
  BER("BER"),
  BFA("BFA"),
  BGD("BGD"),
  BHR("BHR"),
  BIH("BIH"),
  BIO("BIO"),
  BLR("BLR"),
  BLZ("BLZ"),
  BOL("BOL"),
  BOT("BOT"),
  BRB("BRB"),
  BRM("BRM"),
  BRU("BRU"),
  BTN("BTN"),
  BUL("BUL"),
  BVT("BVT"),
  CAF("CAF"),
  CAN("CAN"),
  CBG("CBG"),
  CHL("CHL"),
  CHN("CHN"),
  CHR("CHR"),
  CKH("CKH"),
  CLM("CLM"),
  CLN("CLN"),
  CME("CME"),
  CNR("CNR"),
  COD("COD"),
  COG("COG"),
  COM("COM"),
  CPT("CPT"),
  CPV("CPV"),
  CRO("CRO"),
  CTI("CTI"),
  CTR("CTR"),
  CUB("CUB"),
  CVA("CVA"),
  CYM("CYM"),
  CYP("CYP"),
  CZE("CZE"),
  D("D"),
  DGA("DGA"),
  DJI("DJI"),
  DMA("DMA"),
  DNK("DNK"),
  DOM("DOM"),
  E("E"),
  EGY("EGY"),
  EQA("EQA"),
  ERI("ERI"),
  EST("EST"),
  ETH("ETH"),
  F("F"),
  FIN("FIN"),
  FJI("FJI"),
  FLK("FLK"),
  FRO("FRO"),
  FSM("FSM"),
  G("G"),
  GAB("GAB"),
  GCA("GCA"),
  GCC("GCC"),
  GDL("GDL"),
  GEO("GEO"),
  GHA("GHA"),
  GIB("GIB"),
  GMB("GMB"),
  GNB("GNB"),
  GNE("GNE"),
  GRC("GRC"),
  GRD("GRD"),
  GRL("GRL"),
  GTM("GTM"),
  GUF("GUF"),
  GUI("GUI"),
  GUM("GUM"),
  GUY("GUY"),
  HKG("HKG"),
  HMD("HMD"),
  HND("HND"),
  HNG("HNG"),
  HOL("HOL"),
  HRV("HRV"),
  HTI("HTI"),
  HWA("HWA"),
  HWL("HWL"),
  I("I"),
  ICO("ICO"),
  IND("IND"),
  INS("INS"),
  IRL("IRL"),
  IRN("IRN"),
  IRQ("IRQ"),
  ISL("ISL"),
  ISR("ISR"),
  J("J"),
  JAR("JAR"),
  JMC("JMC"),
  JON("JON"),
  JOR("JOR"),
  KAZ("KAZ"),
  KEN("KEN"),
  KER("KER"),
  KGZ("KGZ"),
  KIR("KIR"),
  KNA("KNA"),
  KOR("KOR"),
  KRE("KRE"),
  KWT("KWT"),
  LAO("LAO"),
  LBN("LBN"),
  LBR("LBR"),
  LBY("LBY"),
  LCA("LCA"),
  LIE("LIE"),
  LSO("LSO"),
  LTU("LTU"),
  LUX("LUX"),
  LVA("LVA"),
  MAC("MAC"),
  MAU("MAU"),
  MCO("MCO"),
  MDA("MDA"),
  MDG("MDG"),
  MDR("MDR"),
  MDW("MDW"),
  MEX("MEX"),
  MHL("MHL"),
  MKD("MKD"),
  MLA("MLA"),
  MLD("MLD"),
  MLI("MLI"),
  MLT("MLT"),
  MNE("MNE"),
  MNG("MNG"),
  MOZ("MOZ"),
  MRA("MRA"),
  MRC("MRC"),
  MRN("MRN"),
  MRT("MRT"),
  MSR("MSR"),
  MTN("MTN"),
  MWI("MWI"),
  MWM("MWM"),
  MYT("MYT"),
  NCG("NCG"),
  NCL("NCL"),
  NFK("NFK"),
  NGR("NGR"),
  NIG("NIG"),
  NIU("NIU"),
  NMB("NMB"),
  NOR("NOR"),
  NPL("NPL"),
  NRU("NRU"),
  NZL("NZL"),
  OCE("OCE"),
  OMA("OMA"),
  PAK("PAK"),
  PAQ("PAQ"),
  PHL("PHL"),
  PHX("PHX"),
  PLM("PLM"),
  PLW("PLW"),
  PNG("PNG"),
  PNR("PNR"),
  POL("POL"),
  POR("POR"),
  PRG("PRG"),
  PRU("PRU"),
  PSE("PSE"),
  PTC("PTC"),
  PTR("PTR"),
  QAT("QAT"),
  REU("REU"),
  ROD("ROD"),
  ROU("ROU"),
  RRW("RRW"),
  RUS("RUS"),
  S("S"),
  SCN("SCN"),
  SDN("SDN"),
  SEN("SEN"),
  SEY("SEY"),
  SHN("SHN"),
  SLM("SLM"),
  SLV("SLV"),
  SMA("SMA"),
  SMO("SMO"),
  SMR("SMR"),
  SNG("SNG"),
  SOM("SOM"),
  SPM("SPM"),
  SRB("SRB"),
  SRL("SRL"),
  STP("STP"),
  SUI("SUI"),
  SUR("SUR"),
  SVK("SVK"),
  SVN("SVN"),
  SWN("SWN"),
  SWZ("SWZ"),
  SYR("SYR"),
  TCA("TCA"),
  TCD("TCD"),
  TGO("TGO"),
  THA("THA"),
  TJK("TJK"),
  TKL("TKL"),
  TKM("TKM"),
  TMP("TMP"),
  TON("TON"),
  TRC("TRC"),
  TRD("TRD"),
  TUN("TUN"),
  TUR("TUR"),
  TUV("TUV"),
  TZA("TZA"),
  UAE("UAE"),
  UGA("UGA"),
  UKR("UKR"),
  URG("URG"),
  USA("USA"),
  UZB("UZB"),
  VCT("VCT"),
  VEN("VEN"),
  VIR("VIR"),
  VRG("VRG"),
  VTN("VTN"),
  VUT("VUT"),
  WAK("WAK"),
  WAL("WAL"),
  YEM("YEM"),
  ZMB("ZMB"),
  ZWE("ZWE"),
  XAA("XAA"),
  XAX("XAX"),
  XBR("XBR"),
  XCS("XCS"),
  XGZ("XGZ"),
  XMM("XMM"),
  XOA("XOA"),
  XSC("XSC"),
  XSP("XSP"),
  @XmlEnumValue("XR1")
  XR_1("XR1"),
  @XmlEnumValue("XR2")
  XR_2("XR2"),
  @XmlEnumValue("XR3")
  XR_3("XR3"),
  XRY("XRY"),
  XSU("XSU"),
  XUN("XUN"),
  XVE("XVE"),
  XWB("XWB"),
  XWM("XWM"),
  XYU("XYU"),
  XZZ("XZZ"),
  AFR("AFR"),
  ANTR("ANTR"),
  ARCO("ARCO"),
  ASIA("ASIA"),
  CAME("CAME"),
  CCEB("CCEB"),
  EEUR("EEUR"),
  EUR("EUR"),
  GEOS("GEOS"),
  HEME("HEME"),
  HEMN("HEMN"),
  HEMS("HEMS"),
  HEMW("HEMW"),
  INDO("INDO"),
  INTL("INTL"),
  ITU("ITU"),
  LANT("LANT"),
  MDE("MDE"),
  MED("MED"),
  MULT("MULT"),
  NGEO("NGEO"),
  OCNA("OCNA"),
  PAC("PAC"),
  SPCE("SPCE"),
  UNKN("UNKN"),
  WEUR("WEUR"),
  NATO("NATO"),
  NEUR("NEUR"),
  XAEW("XAEW"),
  XASC("XASC"),
  XSFN("XSFN"),
  XHQ("XHQ"),
  XSMB("XSMB"),
  XO("XO"),
  XB("XB"),
  XBA("XBA"),
  @XmlEnumValue("XBA1")
  XBA_1("XBA1"),
  @XmlEnumValue("XBA2")
  XBA_2("XBA2"),
  XBAD("XBAD"),
  @XmlEnumValue("XBA3")
  XBA_3("XBA3"),
  @XmlEnumValue("XBA4")
  XBA_4("XBA4"),
  @XmlEnumValue("XBA9")
  XBA_9("XBA9"),
  XBL("XBL"),
  XBM("XBM"),
  @XmlEnumValue("XBO1")
  XBO_1("XBO1"),
  XL("XL"),
  XN("XN"),
  XNA("XNA"),
  @XmlEnumValue("XNA5")
  XNA_5("XNA5"),
  XNAD("XNAD"),
  @XmlEnumValue("XNA6")
  XNA_6("XNA6"),
  @XmlEnumValue("XNA7")
  XNA_7("XNA7"),
  @XmlEnumValue("XNA8")
  XNA_8("XNA8"),
  @XmlEnumValue("XNA0")
  XNA_0("XNA0"),
  XNL("XNL"),
  XNM("XNM"),
  @XmlEnumValue("XNO1")
  XNO_1("XNO1"),
  @XmlEnumValue("XNO2")
  XNO_2("XNO2"),
  @XmlEnumValue("XNO3")
  XNO_3("XNO3"),
  XT("XT"),
  @XmlEnumValue("XC3A")
  XC_3_A("XC3A"),
  XCSA("XCSA"),
  AK("AK"),
  AL("AL"),
  AR("AR"),
  AZ("AZ"),
  CA("CA"),
  CO("CO"),
  CT("CT"),
  DE("DE"),
  FL("FL"),
  GA("GA"),
  HI("HI"),
  IA("IA"),
  ID("ID"),
  IL("IL"),
  IN("IN"),
  KS("KS"),
  KY("KY"),
  LA("LA"),
  MA("MA"),
  MD("MD"),
  ME("ME"),
  MI("MI"),
  MN("MN"),
  MO("MO"),
  MS("MS"),
  MT("MT"),
  NC("NC"),
  ND("ND"),
  NE("NE"),
  NH("NH"),
  NJ("NJ"),
  NM("NM"),
  NV("NV"),
  NY("NY"),
  OH("OH"),
  OK("OK"),
  OR("OR"),
  PA("PA"),
  RI("RI"),
  SC("SC"),
  SD("SD"),
  TN("TN"),
  TX("TX"),
  UT("UT"),
  VA("VA"),
  VT("VT"),
  WA("WA"),
  WI("WI"),
  WV("WV"),
  WY("WY"),
  CBN("CBN"),
  DC("DC"),
  FE("FE"),
  GLM("GLM"),
  GTLK("GTLK"),
  LAM("LAM"),
  LERI("LERI"),
  LHUR("LHUR"),
  LMIC("LMIC"),
  LONT("LONT"),
  LSUP("LSUP"),
  NAME("NAME"),
  PR("PR"),
  RCVR("RCVR"),
  SAME("SAME"),
  SCAN("SCAN"),
  SCML("SCML"),
  US("US"),
  USCE("USCE"),
  USMW("USMW"),
  USNC("USNC"),
  USNE("USNE"),
  USNW("USNW"),
  USP("USP"),
  USSC("USSC"),
  USSE("USSE"),
  USSW("USSW"),
  USWE("USWE"),
  VI("VI");
  private final String value;

  ListAO(String v) {
    value = v;
  }

  public String value() {
    return value;
  }

  public static ListAO fromValue(String v) {
    for (ListAO c : ListAO.values()) {
      if (c.value.equals(v)) {
        return c;
      }
    }
    throw new IllegalArgumentException(v);
  }

}
